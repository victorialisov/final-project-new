{"name": "test_user_can_sign_in", "status": "broken", "statusDetails": {"message": "KeyError: 0", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a24dface6e5dd9d9d11feac24fdb67c2\")>\n\n    @allure.story(\"Check new user can sign up\")\n    def test_user_can_sign_in(browser):\n        user_email = TempUserEmail()\n        with allure.step('Open sign up page'):\n            main_page = MainPage(browser)\n            main_page.open_main_page()\n            main_page.open_sign_in_page()\n        with allure.step('Check sign up page displays'):\n            sign_up_start_page = SignUpStartPage(browser)\n            sign_up_start_page.should_be_sign_up_start_page()\n        with allure.step('Sign up with newly created email box'):\n            user_first_name = random_word_generator()\n            user_second_name = random_word_generator()\n            user_full_name = user_first_name + \" \" + user_second_name\n            email_box = user_email.create_email_box()\n            print(\"!!!!!\" + email_box['email'])\n            sign_up_start_page.start_sign_up(user_full_name, email_box['email'])\n        with allure.step('Check sign up continue page displays'):\n            sign_up_continue_page = SignUpContinuePage(browser)\n            sign_up_continue_page.should_be_sign_up_continue_page()\n        with allure.step('Continue sign up passed'):\n            sign_up_continue_page.continue_sign_up()\n        with allure.step('Check sign up final page displays'):\n            sign_up_final_page = SignUpFinalPage(browser)\n            sign_up_final_page.should_be_sign_up_final_page()\n        with allure.step('Final sign up passed'):\n            sign_up_final_page.final_sign_up()\n        with allure.step('Pass by registration link from user email'):\n            print(\"!!!!!\" + email_box['key'])\n            email_box_key = email_box['key']\n            # sleep is needed for registration mail will be sent to user_email\n            time.sleep(10)\n            mail_list = user_email.get_mails_list(email_box_key)\n            print(\"!!!!! mail_list: \" + json.dumps(mail_list))\n>           sign_up_email_msg = user_email.get_mail_msg(mail_list[0]['id'], email_box_key)\nE           KeyError: 0\n\ntests\\test_sign_up.py:50: KeyError"}, "steps": [{"name": "Open sign up page", "status": "passed", "start": 1633279534458, "stop": 1633279537251}, {"name": "Check sign up page displays", "status": "passed", "start": 1633279537251, "stop": 1633279537272}, {"name": "Sign up with newly created email box", "status": "passed", "start": 1633279537272, "stop": 1633279539721}, {"name": "Check sign up continue page displays", "status": "passed", "start": 1633279539721, "stop": 1633279539749}, {"name": "Continue sign up passed", "status": "passed", "start": 1633279539749, "stop": 1633279539817}, {"name": "Check sign up final page displays", "status": "passed", "start": 1633279539817, "stop": 1633279540166}, {"name": "Final sign up passed", "status": "passed", "start": 1633279540166, "stop": 1633279540210}, {"name": "Pass by registration link from user email", "status": "broken", "statusDetails": {"message": "KeyError: 0\n", "trace": "  File \"C:\\Users\\viktorial\\Documents\\python-project\\final-project-new\\tests\\test_sign_up.py\", line 50, in test_user_can_sign_in\n    sign_up_email_msg = user_email.get_mail_msg(mail_list[0]['id'], email_box_key)\n"}, "start": 1633279540210, "stop": 1633279550608}], "attachments": [{"name": "stdout", "source": "fa3937bb-d05a-4295-a0e2-d98b5143d0c6-attachment.txt", "type": "text/plain"}], "start": 1633279534458, "stop": 1633279550611, "uuid": "d14c1eb6-5b0d-46ed-9b1b-9668f708bbbf", "historyId": "fdc5f7362b5ca9de9192ce5f6efd4eb0", "testCaseId": "932dc57a0d23d7b3c463606e6e97eb1d", "fullName": "tests.test_sign_up#test_user_can_sign_in", "labels": [{"name": "story", "value": "Check new user can sign up"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_sign_up"}, {"name": "host", "value": "viktorial"}, {"name": "thread", "value": "14612-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_sign_up"}]}